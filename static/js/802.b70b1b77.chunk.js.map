{"version":3,"file":"static/js/802.b70b1b77.chunk.js","mappings":"mMA8BA,UA1Be,WACb,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAUR,GACPS,MAAK,gBAAGC,EAAH,EAAGA,QAAH,OAAiBN,EAAUM,EAA3B,IACLC,OAAM,SAAAN,GAAK,OAAIC,EAASD,EAAb,GACf,GAAE,CAACL,KAGF,gCACGK,IAAS,wBAAKA,EAAMO,UACF,IAAlBT,EAAOU,SAAgB,qEACvBV,EAAOU,OAAS,GACfV,EAAOW,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,GAAIC,EAAf,EAAeA,QAAf,OACT,4BACE,sCAAcF,MACd,uBAAIE,MAFID,EADD,MAQlB,C,kMC1BKE,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAY,mCAAG,6GAEDD,EAAAA,EAAAA,IAAA,qCAAwCD,IAFvC,cAElBG,EAFkB,yBAGjBA,EAASC,MAHQ,wFAAH,qDAOZC,EAAc,mCAAG,WAAMC,GAAN,gGAEHL,EAAAA,EAAAA,IAAA,+BACGD,EADH,iCACmCM,EADnC,gCAFG,cAEpBH,EAFoB,yBAKnBA,EAASC,MALU,wFAAH,sDASdG,EAAQ,mCAAG,WAAOT,EAAIU,GAAX,0FAEPP,EAAAA,EAAAA,IAAA,iBAAoBH,EAApB,oBAAkCE,IAF3B,gIAAH,wDAMRS,EAAO,mCAAG,WAAMX,GAAN,gGAEIG,EAAAA,EAAAA,IAAA,gBACZH,EADY,4BACUE,EADV,oBAFJ,cAEbG,EAFa,yBAKZA,EAASC,MALG,wFAAH,sDASPd,EAAS,mCAAG,WAAMQ,GAAN,gGAEEG,EAAAA,EAAAA,IAAA,gBACZH,EADY,4BACUE,EADV,oBAFF,cAEfG,EAFe,yBAKdA,EAASC,MALK,wFAAH,qD","sources":["components/Review/Review.jsx","services/movieAPI.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReview } from 'services/movieAPI';\n\nconst Review = () => {\n  const { movieId } = useParams();\n  const [review, setReview] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    getReview(movieId)\n      .then(({ results }) => setReview(results))\n      .catch(error => setError(error));\n  }, [movieId]);\n\n  return (\n    <>\n      {error && <h1>{error.message}</h1>}\n      {review.length === 0 && <p>We don't have any reviews for this movie.</p>}\n      {review.length > 1 &&\n        review.map(({ author, id, content }) => (\n          <div key={id}>\n            <h3> Author: {author}</h3>\n            <p>{content}</p>\n          </div>\n        ))}\n    </>\n  );\n};\n\nexport default Review;\n","import axios from 'axios';\n\nconst API_KEY = '7113ba9605fd4f5593de8c8922948eb6';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getMovieList = async () => {\n  try {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data;\n  } catch {}\n};\n\nexport const getMovieSearch = async query => {\n  try {\n    const response = await axios.get(\n      `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n    return response.data;\n  } catch (error) {}\n};\n\nexport const getMovie = async (id, signal) => {\n  try {\n    return await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  } catch (error) {}\n};\n\nexport const getCast = async id => {\n  try {\n    const response = await axios.get(\n      `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {}\n};\n\nexport const getReview = async id => {\n  try {\n    const response = await axios.get(\n      `movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {}\n};\n"],"names":["movieId","useParams","useState","review","setReview","error","setError","useEffect","getReview","then","results","catch","message","length","map","author","id","content","API_KEY","axios","getMovieList","response","data","getMovieSearch","query","getMovie","signal","getCast"],"sourceRoot":""}