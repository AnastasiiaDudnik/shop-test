{"version":3,"file":"static/js/247.4fa6deee.chunk.js","mappings":"mMAuCA,UAnCa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAUA,OARAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAQR,GACLS,MAAK,gBAAGN,EAAH,EAAGA,KAAH,OAAcC,EAAQD,EAAtB,IACLO,OAAM,SAAAL,GAAK,OAAIC,EAASD,EAAb,GACf,GAAE,CAACL,KAKF,gCACGK,IAAS,wBAAKA,EAAMM,WACrB,wBACGR,GACCA,EAAKS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACP,2BACE,gBACEC,IAAG,0CAAqCD,GACxCE,IAAKJ,EACLK,MAAO,IACPC,OAAQ,OAEV,uBAAIN,KACJ,uCAAeC,OARRF,EADF,QAelB,C,kMCnCKQ,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAY,mCAAG,6GAEDD,EAAAA,EAAAA,IAAA,qCAAwCD,IAFvC,cAElBG,EAFkB,yBAGjBA,EAASC,MAHQ,wFAAH,qDAOZC,EAAc,mCAAG,WAAMC,GAAN,gGAEHL,EAAAA,EAAAA,IAAA,+BACGD,EADH,iCACmCM,EADnC,gCAFG,cAEpBH,EAFoB,yBAKnBA,EAASC,MALU,wFAAH,sDASdG,EAAQ,mCAAG,WAAOf,EAAIgB,GAAX,0FAEPP,EAAAA,EAAAA,IAAA,iBAAoBT,EAApB,oBAAkCQ,IAF3B,gIAAH,wDAMRb,EAAO,mCAAG,WAAMK,GAAN,gGAEIS,EAAAA,EAAAA,IAAA,gBACZT,EADY,4BACUQ,EADV,oBAFJ,cAEbG,EAFa,yBAKZA,EAASC,MALG,wFAAH,sDASPK,EAAS,mCAAG,WAAMjB,GAAN,gGAEES,EAAAA,EAAAA,IAAA,gBACZT,EADY,4BACUQ,EADV,oBAFF,cAEfG,EAFe,yBAKdA,EAASC,MALK,wFAAH,qD","sources":["components/Cast/Cast.jsx","services/movieAPI.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from 'services/movieAPI';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    getCast(movieId)\n      .then(({ cast }) => setCast(cast))\n      .catch(error => setError(error));\n  }, [movieId]);\n\n  // const {name, character, profile_path} = cast\n\n  return (\n    <>\n      {error && <h1>{error.message}</h1>}\n      <ul>\n        {cast &&\n          cast.map(({ id, name, character, profile_path }) => (\n            <li key={id}>\n              <img\n                src={`https://image.tmdb.org/t/p/w500/${profile_path}`}\n                alt={name}\n                width={100}\n                height={150}\n              />\n              <p>{name}</p>\n              <p>Character: {character}</p>\n            </li>\n          ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = '7113ba9605fd4f5593de8c8922948eb6';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getMovieList = async () => {\n  try {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data;\n  } catch {}\n};\n\nexport const getMovieSearch = async query => {\n  try {\n    const response = await axios.get(\n      `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n    return response.data;\n  } catch (error) {}\n};\n\nexport const getMovie = async (id, signal) => {\n  try {\n    return await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  } catch (error) {}\n};\n\nexport const getCast = async id => {\n  try {\n    const response = await axios.get(\n      `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {}\n};\n\nexport const getReview = async id => {\n  try {\n    const response = await axios.get(\n      `movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {}\n};\n"],"names":["movieId","useParams","useState","cast","setCast","error","setError","useEffect","getCast","then","catch","message","map","id","name","character","profile_path","src","alt","width","height","API_KEY","axios","getMovieList","response","data","getMovieSearch","query","getMovie","signal","getReview"],"sourceRoot":""}