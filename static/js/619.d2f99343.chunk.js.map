{"version":3,"file":"static/js/619.d2f99343.chunk.js","mappings":"8MAGaA,EAAe,SAAC,GAAY,IAAVC,EAAS,EAATA,GAC7B,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAcC,EAAAA,EAAAA,KAAdD,UAQR,OACE,gCACGF,IAAS,wBAAKA,EAAMI,WACrB,mBAAQC,KAAK,SAASC,QAAS,kBATf,SAAAR,GAClBI,EAAUJ,GACPS,KAAKC,QAAQC,IAAI,kBACjBC,OAAM,SAAAV,GAAK,OAAIC,EAASD,EAAb,GACf,CAKwCW,CAAYb,EAAlB,EAA/B,2BAKL,C,yICnBYc,EAAiBC,EAAAA,GAAAA,GAAH,mF,kBCIdC,EAAc,WACzB,OAAsCf,EAAAA,EAAAA,UAAS,IAA/C,eAAOgB,EAAP,KAAoBC,EAApB,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BnB,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAUA,OARAkB,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MACGb,MAAK,YAAe,IAAZc,EAAW,EAAXA,KACPL,EAAeK,EAChB,IACAX,OAAM,SAAAV,GAAK,OAAIC,EAASD,EAAb,GACf,GAAE,KAGD,gCACGA,IAAS,wBAAKA,EAAMI,WACrB,SAACQ,EAAD,UACGG,EAAYO,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,IAAKC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,MAArB,OACf,2BACE,SAAC,KAAD,CAAMC,GAAE,WAAMH,GAAOI,MAAO,CAAEC,KAAMZ,GAApC,SACGM,KAEH,uBAAIE,KACJ,yBAAIC,EAAJ,WACA,SAAC7B,EAAA,EAAD,CAAcC,GAAI0B,MANXA,EADM,QAaxB,EClCYM,EAAejB,EAAAA,GAAAA,GAAH,mFCIZkB,EAAiB,WAC5B,OAA4ChC,EAAAA,EAAAA,UAAS,MAArD,eAAOiC,EAAP,KAAuBC,EAAvB,KACMhB,GAAWC,EAAAA,EAAAA,MACjB,GAA0BnB,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAUA,OARAkB,EAAAA,EAAAA,YAAU,YACRe,EAAAA,EAAAA,MACG3B,MAAK,YAAe,IAAZc,EAAW,EAAXA,KACPY,EAAkBZ,EACnB,IACAX,OAAM,SAAAV,GAAK,OAAIC,EAASD,EAAb,GACf,GAAE,KAGD,gCACGA,IAAS,8BAAMA,EAAMI,WACrB4B,IACC,iCACE,2DACA,SAACF,EAAD,WACE,2BACE,SAAC,KAAD,CAAMH,GAAE,WAAMK,EAAeR,KAAOI,MAAO,CAAEC,KAAMZ,GAAnD,SACGe,EAAeT,QAElB,uBAAIS,EAAeP,SACnB,yBAAIO,EAAeN,MAAnB,WACA,SAAC7B,EAAA,EAAD,CAAcC,GAAIkC,EAAeR,QAN1BQ,EAAeR,YAanC,EC3BD,EATa,WACX,OACE,iCACE,SAACV,EAAD,KACA,SAACiB,EAAD,MAGL,C,+ICPDI,EAAAA,EAAAA,SAAAA,QAAyB,yBACzBA,EAAAA,EAAAA,SAAAA,iBAAiC,EAE1B,IAAMf,EAAc,mCAAG,uGAEbe,EAAAA,EAAAA,IAAU,YAFG,gIAAH,qDAMdC,EAAU,mCAAG,WAAMtC,GAAN,0FAETqC,EAAAA,EAAAA,IAAA,mBAAsBrC,IAFb,gIAAH,sDAMVoC,EAAiB,mCAAG,uGAEhBC,EAAAA,EAAAA,IAAA,mBAFgB,gIAAH,oD","sources":["components/AddToCart/AddToCartBtn.jsx","components/ProductList/ProductList.styled.jsx","components/ProductList/ProductList.jsx","components/RecenlyViewed/RecentlyViewed.styled.jsx","components/RecenlyViewed/RecentlyViewed.jsx","pages/Home.jsx","services/productsAPI.js"],"sourcesContent":["import { useState } from 'react';\nimport { useCart } from 'services/cartContext';\n\nexport const AddToCartBtn = ({ id }) => {\n  const [error, setError] = useState(null);\n  const { addToCart } = useCart();\n\n  const handleClick = id => {\n    addToCart(id)\n      .then(console.log('added to cart'))\n      .catch(error => setError(error));\n  };\n\n  return (\n    <>\n      {error && <h1>{error.message}</h1>}\n      <button type=\"button\" onClick={() => handleClick(id)}>\n        Add to cart\n      </button>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ListOfProducts = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n","import { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { getProductList } from 'services/productsAPI';\nimport { ListOfProducts } from './ProductList.styled';\nimport { AddToCartBtn } from 'components/AddToCart/AddToCartBtn';\n\nexport const ProductList = () => {\n  const [productList, setProductList] = useState([]);\n  const location = useLocation();\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    getProductList()\n      .then(({ data }) => {\n        setProductList(data);\n      })\n      .catch(error => setError(error));\n  }, []);\n\n  return (\n    <>\n      {error && <h1>{error.message}</h1>}\n      <ListOfProducts>\n        {productList.map(({ name, _id, color, price }) => (\n          <li key={_id}>\n            <Link to={`/${_id}`} state={{ from: location }}>\n              {name}\n            </Link>\n            <p>{color}</p>\n            <p>{price} UAH</p>\n            <AddToCartBtn id={_id} />\n          </li>\n        ))}\n      </ListOfProducts>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ListOfViewed = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n","import { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { getRecentlyViewed } from 'services/productsAPI';\nimport { AddToCartBtn } from 'components/AddToCart/AddToCartBtn';\nimport { ListOfViewed } from './RecentlyViewed.styled';\n\nexport const RecentlyViewed = () => {\n  const [recentlyViewed, setRecentlyViewed] = useState(null);\n  const location = useLocation();\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    getRecentlyViewed()\n      .then(({ data }) => {\n        setRecentlyViewed(data);\n      })\n      .catch(error => setError(error));\n  }, []);\n\n  return (\n    <>\n      {error && <h1> {error.message}</h1>}\n      {recentlyViewed && (\n        <>\n          <h2> Your recenly viewed products</h2>\n          <ListOfViewed>\n            <li key={recentlyViewed._id}>\n              <Link to={`/${recentlyViewed._id}`} state={{ from: location }}>\n                {recentlyViewed.name}\n              </Link>\n              <p>{recentlyViewed.color}</p>\n              <p>{recentlyViewed.price} UAH</p>\n              <AddToCartBtn id={recentlyViewed._id} />\n            </li>\n          </ListOfViewed>\n        </>\n      )}\n    </>\n  );\n};\n","import { ProductList } from 'components/ProductList/ProductList';\nimport { RecentlyViewed } from 'components/RecenlyViewed/RecentlyViewed';\n\nconst Home = () => {\n  return (\n    <>\n      <ProductList />\n      <RecentlyViewed />\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\n// axios.defaults.baseURL = 'https://sb-shop.onrender.com/';\naxios.defaults.baseURL = 'http://localhost:3001/';\naxios.defaults.withCredentials = true;\n\nexport const getProductList = async () => {\n  try {\n    return await axios.get('products');\n  } catch {}\n};\n\nexport const getProduct = async id => {\n  try {\n    return await axios.get(`products/${id}`);\n  } catch (error) {}\n};\n\nexport const getRecentlyViewed = async () => {\n  try {\n    return await axios.get(`products/viewed`);\n  } catch (error) {}\n};\n\nexport const getCart = async () => {\n  try {\n    return await axios.get(`cart`);\n  } catch (error) {}\n};\n\nexport const addToCart = async id => {\n  try {\n    return await axios.post(`cart/${id}`);\n  } catch (error) {}\n};\n"],"names":["AddToCartBtn","id","useState","error","setError","addToCart","useCart","message","type","onClick","then","console","log","catch","handleClick","ListOfProducts","styled","ProductList","productList","setProductList","location","useLocation","useEffect","getProductList","data","map","name","_id","color","price","to","state","from","ListOfViewed","RecentlyViewed","recentlyViewed","setRecentlyViewed","getRecentlyViewed","axios","getProduct"],"sourceRoot":""}