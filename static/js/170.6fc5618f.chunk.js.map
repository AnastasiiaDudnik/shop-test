{"version":3,"file":"static/js/170.6fc5618f.chunk.js","mappings":"wSAGaA,GAAWC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,wH,SCCRE,EAAS,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SACrBC,EAAOF,EAAGG,QAAQC,SAAWJ,EAAGG,QAAQE,OAC9C,OACE,UAACT,EAAD,CAAUI,GAAIE,EAAd,WACE,SAAC,MAAD,IACCD,IAGN,EAEDF,EAAOO,SAAW,CAChBN,GAAIO,IAAAA,OAAAA,WACJN,SAAUM,IAAAA,MCdL,IAAMC,EAAUX,EAAAA,GAAAA,IAAH,wDCqEpB,EAhEqB,WAAO,IAAD,IACjBY,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WACjD,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAASd,GACNe,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcN,EAASM,EAAvB,IACLC,OAAM,SAAAN,GAAK,OAAIC,EAASD,EAAb,GACf,GAAE,CAACX,IAEJ,IAAQkB,EACNT,EADMS,MAAOC,EACbV,EADaU,aAAcC,EAC3BX,EAD2BW,YAAaC,EACxCZ,EADwCY,SAAUC,EAClDb,EADkDa,OAAQC,EAC1Dd,EAD0Dc,aAGtDC,EAAYC,OAAOC,SAAwB,GAAfH,GAElC,OACE,gCACGZ,IAAS,wBAAKA,EAAMgB,WACrB,SAACrC,EAAD,CAAQC,GAAIa,EAAZ,sBACA,UAACL,EAAD,WACGU,IACC,4BACE,0BACGS,EADH,KACYC,EAAaS,MAAM,EAAG,GADlC,QAGA,wCAAgBJ,EAAhB,QACA,sCACA,uBAAIH,KACJ,mCACCC,EAAOO,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,GAAT,OACV,uBAAaD,GAALC,EADE,QAMhB,0BACE,gBACEC,IAAG,0CAAqCZ,GACxCa,IAAKf,UAIX,4BACE,mDACA,2BACE,yBACE,SAAC,KAAD,CAAM3B,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,SAAT,6BAKN,SAAC,EAAA2C,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QAIP,C,kMCnEKC,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAY,mCAAG,6GAEDD,EAAAA,EAAAA,IAAA,qCAAwCD,IAFvC,cAElBG,EAFkB,yBAGjBA,EAASxB,MAHQ,wFAAH,qDAOZyB,EAAc,mCAAG,WAAMC,GAAN,gGAEHJ,EAAAA,EAAAA,IAAA,+BACGD,EADH,iCACmCK,EADnC,gCAFG,cAEpBF,EAFoB,yBAKnBA,EAASxB,MALU,wFAAH,sDASdF,EAAQ,mCAAG,WAAOiB,EAAIY,GAAX,0FAEPL,EAAAA,EAAAA,IAAA,iBAAoBP,EAApB,oBAAkCM,IAF3B,gIAAH,wDAMRO,EAAO,mCAAG,WAAMb,GAAN,gGAEIO,EAAAA,EAAAA,IAAA,gBACZP,EADY,4BACUM,EADV,oBAFJ,cAEbG,EAFa,yBAKZA,EAASxB,MALG,wFAAH,sDASP6B,EAAS,mCAAG,WAAMd,GAAN,gGAEEO,EAAAA,EAAAA,IAAA,gBACZP,EADY,4BACUM,EADV,oBAFF,cAEfG,EAFe,yBAKdA,EAASxB,MALK,wFAAH,qD","sources":["components/GoBack/GoBack.styled.jsx","components/GoBack/GoBack.jsx","pages/MovieDetails.styed.jsx","pages/MovieDetails.jsx","services/movieAPI.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const BackLink = styled(Link)`\n  display: flex;\n  gap: 10px;\n  align-items: center;\n\n  :hover {\n    color: #ed6179;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { AiOutlineArrowLeft } from 'react-icons/ai';\nimport { BackLink } from './GoBack.styled';\n\nexport const GoBack = ({ to, children }) => {\n  const link = to.current.pathname + to.current.search;\n  return (\n    <BackLink to={link}>\n      <AiOutlineArrowLeft />\n      {children}\n    </BackLink>\n  );\n};\n\nGoBack.PropType = {\n  to: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 10px;\n`;\n","import { Outlet, useParams, Link, useLocation } from 'react-router-dom';\nimport { useState, useEffect, useRef, Suspense } from 'react';\nimport { getMovie } from 'services/movieAPI';\nimport { Loader } from 'components/Loader/Loader';\nimport { GoBack } from 'components/GoBack/GoBack';\nimport { Wrapper } from './MovieDetails.styed';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const goBackRef = useRef(location.state?.from ?? '/movies');\n  const [movie, setMovie] = useState('');\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    getMovie(movieId)\n      .then(({ data }) => setMovie(data))\n      .catch(error => setError(error));\n  }, [movieId]);\n\n  const { title, release_date, poster_path, overview, genres, vote_average } =\n    movie;\n\n  const userScore = Number.parseInt(vote_average * 10);\n\n  return (\n    <>\n      {error && <h1>{error.message}</h1>}\n      <GoBack to={goBackRef}>Go back</GoBack>\n      <Wrapper>\n        {movie && (\n          <div>\n            <h1>\n              {title} ({release_date.slice(0, 4)})\n            </h1>\n            <p>User Score: {userScore}%</p>\n            <h2>Overview</h2>\n            <p>{overview}</p>\n            <h3>Genres</h3>\n            {genres.map(({ name, id }) => (\n              <p key={id}>{name}</p>\n            ))}\n          </div>\n        )}\n\n        <div>\n          <img\n            src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n            alt={title}\n          />\n        </div>\n      </Wrapper>\n      <div>\n        <p>Additional information</p>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"review\">Review</Link>\n          </li>\n        </ul>\n      </div>\n\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = '7113ba9605fd4f5593de8c8922948eb6';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getMovieList = async () => {\n  try {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data;\n  } catch {}\n};\n\nexport const getMovieSearch = async query => {\n  try {\n    const response = await axios.get(\n      `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n    return response.data;\n  } catch (error) {}\n};\n\nexport const getMovie = async (id, signal) => {\n  try {\n    return await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  } catch (error) {}\n};\n\nexport const getCast = async id => {\n  try {\n    const response = await axios.get(\n      `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {}\n};\n\nexport const getReview = async id => {\n  try {\n    const response = await axios.get(\n      `movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {}\n};\n"],"names":["BackLink","styled","Link","GoBack","to","children","link","current","pathname","search","PropType","PropTypes","Wrapper","movieId","useParams","location","useLocation","goBackRef","useRef","state","from","useState","movie","setMovie","error","setError","useEffect","getMovie","then","data","catch","title","release_date","poster_path","overview","genres","vote_average","userScore","Number","parseInt","message","slice","map","name","id","src","alt","Suspense","fallback","Loader","API_KEY","axios","getMovieList","response","getMovieSearch","query","signal","getCast","getReview"],"sourceRoot":""}