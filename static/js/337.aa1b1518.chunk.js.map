{"version":3,"file":"static/js/337.aa1b1518.chunk.js","mappings":"8MAGaA,EAAe,SAAC,GAAY,IAAVC,EAAS,EAATA,GAC7B,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAcC,EAAAA,EAAAA,KAAdD,UAQR,OACE,gCACGF,IAAS,wBAAKA,EAAMI,WACrB,mBAAQC,KAAK,SAASC,QAAS,kBATf,SAAAR,GAClBI,EAAUJ,GACPS,KAAKC,QAAQC,IAAI,kBACjBC,OAAM,SAAAV,GAAK,OAAIC,EAASD,EAAb,GACf,CAKwCW,CAAYb,EAAlB,EAA/B,2BAKL,C,gGCsBD,UArCgB,WACd,IAAQA,GAAOc,EAAAA,EAAAA,MAAPd,GACR,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOc,EAAP,KAAgBC,EAAhB,KACA,GAA0Bf,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,MAEAc,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAWlB,GACRS,MAAK,YAAe,IAAZU,EAAW,EAAXA,KACPT,QAAQC,IAAIQ,GACZH,EAAWG,EAAKC,OACjB,IACAR,OAAM,SAAAV,GAAK,OAAIC,EAASD,EAAb,GACf,GAAE,CAACF,IAEJ,IAAQqB,EAAgBN,EAAhBM,KAAMC,EAAUP,EAAVO,MAEd,OACE,gCACGpB,IAAS,wBAAKA,EAAMI,WAErB,yBACGS,IACC,4BACE,wBAAKM,KACL,mCAAWC,EAAX,WACA,SAAC,IAAD,CAActB,GAAIA,UAKxB,SAAC,EAAAuB,SAAD,CAAUC,UAAU,SAAC,IAAD,IAApB,UACE,SAAC,KAAD,QAIP,C","sources":["components/AddToCart/AddToCartBtn.jsx","pages/OneProduct.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useCart } from 'services/cartContext';\n\nexport const AddToCartBtn = ({ id }) => {\n  const [error, setError] = useState(null);\n  const { addToCart } = useCart();\n\n  const handleClick = id => {\n    addToCart(id)\n      .then(console.log('added to cart'))\n      .catch(error => setError(error));\n  };\n\n  return (\n    <>\n      {error && <h1>{error.message}</h1>}\n      <button type=\"button\" onClick={() => handleClick(id)}>\n        Add to cart\n      </button>\n    </>\n  );\n};\n","import { Outlet, useParams } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { getProduct } from 'services/productsAPI';\nimport { Loader } from 'components/Loader/Loader';\nimport { AddToCartBtn } from 'components/AddToCart/AddToCartBtn';\n\nconst Product = () => {\n  const { id } = useParams();\n  const [product, setProduct] = useState('');\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    getProduct(id)\n      .then(({ data }) => {\n        console.log(data);\n        setProduct(data.result);\n      })\n      .catch(error => setError(error));\n  }, [id]);\n\n  const { name, price } = product;\n\n  return (\n    <>\n      {error && <h1>{error.message}</h1>}\n\n      <div>\n        {product && (\n          <div>\n            <h1>{name}</h1>\n            <p>Price: {price} UAH</p>\n            <AddToCartBtn id={id} />\n          </div>\n        )}\n      </div>\n\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default Product;\n"],"names":["AddToCartBtn","id","useState","error","setError","addToCart","useCart","message","type","onClick","then","console","log","catch","handleClick","useParams","product","setProduct","useEffect","getProduct","data","result","name","price","Suspense","fallback"],"sourceRoot":""}